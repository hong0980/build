#!/bin/sh /etc/rc.common

START=19
extra_command "reconfig" ""

boot() {
	XBOOT=1 start
}

uci_get_network() {
	local ret=$(uci -q get network."$1"."$2")
	echo ${ret:=$3}
}

uci_set_network() {
	uci -q set network."$1"."$2"="$3"
}
# uci changes network.lan
add_wizard() {
	[ "x$XBOOT" = "x1" ] && return 0
	get_config="dhcp ipv6 lan_dns lan_gateway lan_ipaddr lan_netmask old_ipv6 old_siderouter old_wifi_key old_wifi_ssid siderouter wan_pppoe_pass wan_pppoe_user wan_proto wifi_key wifi_ssid"
	for x in $get_config; do config_get "$x" "$1" "$x"; done

	[ ! -f /etc/config/bk_dhcp     -a -s /etc/config/dhcp     ] && cp /etc/config/dhcp /etc/config/bk_dhcp
	[ ! -f /etc/config/bk_network  -a -s /etc/config/network  ] && cp /etc/config/network /etc/config/bk_network
	[ ! -f /etc/config/bk_firewall -a -s /etc/config/firewall ] && cp /etc/config/firewall /etc/config/bk_firewall
	[ ! -f /etc/config/bk_wireless -a -s /etc/config/wireless ] && cp /etc/config/wireless /etc/config/bk_wireless

	case $wan_proto in
		dhcp)
			uci_set_network wan proto dhcp
			uci -q delete network.wan.username
			uci -q delete network.wan.password
		;;
		pppoe)
			[ "$wan_pppoe_user" != "$(uci_get_network wan username)" -o "$wan_pppoe_pass" != "$(uci_get_network wan password)" ] && {
				uci_set_network wan proto pppoe
				uci_set_network wan username "$wan_pppoe_user"
				uci_set_network wan password "$wan_pppoe_pass"
			}
		;;
	esac

	if [ "$siderouter" != "$old_siderouter" ]; then
		if [ "$lan_gateway" != "$(uci_get_network lan gateway)" -o "$dhcp" != "$(uci -q get dhcp.lan.ignore)" ]; then
			if [ "$siderouter" = 1 ]; then
				uci_set_network lan gateway "$lan_gateway"
				[ "$dhcp" = 1 ] && uci -q set dhcp.lan.ignore="1" || uci -q delete dhcp.lan.ignore
				uci -q set firewall.@zone[0].masq='1'
				echo "iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE" >>/etc/firewall.user
			else
				uci -q delete dhcp.lan.ignore
				uci -q delete network.lan.dns
				uci -q delete network.lan.gateway
				uci -q delete firewall.@zone[0].masq
				sed -i "/iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE/d" /etc/firewall.user
			fi
		fi
		uci -q set wizard.default.old_siderouter="$siderouter"
	fi
	[ "$lan_dns" != "$(uci_get_network lan dns)" ] && uci_set_network lan dns "$lan_dns"
	[ "$lan_ipaddr" != "$(uci_get_network lan ipaddr)" ] && uci_set_network lan ipaddr "$lan_ipaddr"
	[ "$lan_netmask" != "$(uci_get_network lan netmask)" ] && uci_set_network lan netmask "$lan_netmask"

	if [ "$ipv6" != "$old_ipv6" ]; then
		case "$ipv6" in
			0) uci_set_network wan ipv6 0;;
			1) uci_set_network wan ipv6 1;;
			2) uci_set_network wan ipv6 auto;;
		esac
		uci -q set wizard.default.old_ipv6="$ipv6"
	fi

	test -s /etc/config/wireless && {
		wifi_setup_radio() {
			local radio=$1
			uci -q get wireless.${radio} && {
				if [ "$(uci -q get wireless.${radio}.band)" = "5g" ]; then
					uci -q set wireless.default_${radio}.ssid="${wifi_ssid}_5G"
				else
					uci -q set wireless.default_${radio}.ssid="${wifi_ssid}_2.4G"
				fi
				uci -q set wireless.default_${radio}.device="$radio"
				if [ "$wifi_key" ]; then
					uci -q set wireless.default_${radio}.key="$wifi_key"
					uci -q set wireless.default_${radio}.encryption='psk2'
				else
					uci -q set wireless.default_${radio}.encryption='none'
				fi
			}
		}

		if [ "$wifi_ssid" != "$old_wifi_ssid" -o "$wifi_key" != "$old_wifi_key" ]; then
			test -n "$wifi_ssid" && {
				for radio in radio0 radio1 radio2 radio3; do
					wifi_setup_radio "$radio"
				done
				uci commit wireless
			}
			uci -q set wizard.default.old_wifi_key="$wifi_key"
			uci -q set wizard.default.old_wifi_ssid="$wifi_ssid"
		fi
	}

	uci commit dhcp
	uci commit wizard
	uci commit network
	uci commit firewall
	( sleep 5
	/etc/init.d/dnsmasq reload
	/etc/init.d/network reload
	/etc/init.d/firewall reload ) &
}

reconfig() {
	uci -q set wizard.default.lan_dns="$(uci_get_network lan dns)"
	uci -q set wizard.default.wan_proto="$(uci_get_network wan proto)"
	uci -q set wizard.default.lan_ipaddr="$(uci_get_network lan ipaddr)"
	uci -q set wizard.default.lan_netmask="$(uci_get_network lan netmask)"
	uci -q set wizard.default.lan_gateway="$(uci_get_network lan gateway)"
	uci -q set wizard.default.wan_pppoe_user="$(uci_get_network wan username)"
	uci -q set wizard.default.wan_pppoe_pass="$(uci_get_network wan password)"
	[ -n "$(uci -q get dhcp.lan.ignore)" ] && uci -q set wizard.default.dhcp="0" || uci -q delete wizard.default.dhcp
	uci commit wizard
}

start() {
	config_load wizard
	config_foreach add_wizard wizard
}

restart() {
	XRELOAD=1 start
}
