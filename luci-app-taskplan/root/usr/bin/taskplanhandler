#!/bin/sh
# Copyright 2020-2024 sirpdboy, 2021 jjm2473

TASKPLAN_DIR=/etc/taskplan
LOG="$TASKPLAN_DIR/taskplan.log"
LOCK_FILE="/var/lock/taskplan_counter.lock"
COUNTER_FILE="/var/run/taskplan_counter.dat"

log() {
	(
		flock -x -n 200 || {
			echo "$(date +'%m-%d %H:%M:%S') - $(trf "[WARN] Failed to acquire lock, skipping log")" >> "$LOG"
			return 1
		}

		local count=$(( $(cat "$COUNTER_FILE" 2>/dev/null || echo "0") + 1 ))
		echo "$count" > "$COUNTER_FILE"

		printf "[%s] #%03d %s\n" \
			   "$(date +'%m-%d %H:%M:%S')" \
			   "$count" "$*" >> "$LOG"
	) 200>"$LOCK_FILE"
}

limit_log() {
	[ -s "$LOG" ] || return
	count=$(wc -l < "$LOG")
	[ "$count" -gt "${1:-500}" ] && sed -i "1,$((count-${1:-500}))d" $LOG
}

disreconnwan() {
	for i in 1 2 3 4 5; do
		if ping -c 1 -W 1 180.76.76.76 >/dev/null || ping -c 1 -W 1 223.5.5.5 >/dev/null; then
			return 0
		fi
		sleep 5
	done
	return 1
}

remwan3() {
	count=0
	while [ $count -lt 10 ]; do
		if /usr/sbin/mwan3 status | grep -q error; then
			log $(trf "Restarting mwan3...")
			/usr/sbin/mwan3 restart
		else
			log $(trf "mwan3 status normal")
			exit 1
		fi
		sleep 60
		count=$((count+1))
	done
	log $(trf "mwan3 monitor timeout")
}

trigger() {
	case "$1" in
		reboot) reboot ;;
		poweroff) poweroff ;;
		closewan) ifdown wan ;;
		disrereboot) disreconnwan || reboot ;;
		network) /etc/init.d/network restart ;;
		restartwan) ifup wan; log $(trf "WAN restart successful!") ;;
		restartmwan3) [ -x /usr/sbin/mwan3 ] && remwan3 ;;
		clearmem) sync && echo 3 > /proc/sys/vm/drop_caches ;;
		restartlan) ifdown lan; ifup lan; log $(trf "LAN restart successful!") ;;
		disreconn) disreconnwan || { ifup wan; log $(trf "Redial successful!"); } ;;
		customscript1) [ -s "$TASKPLAN_DIR/customscript1" ] && . "$TASKPLAN_DIR/customscript1" ;;
		customscript2) [ -s "$TASKPLAN_DIR/customscript2" ] && . "$TASKPLAN_DIR/customscript2" ;;
		restartsamba)
			for svc in ksmdb samba samba4; do
				[ -x "/etc/init.d/$svc" ] && /etc/init.d/"$svc" restart
			done
			;;
		upwifi)
			ifconfig wlan0 up 2>/dev/null
			uci -q set wireless.radio0.disabled=0
			uci -q set wireless.radio1.disabled=0
			uci commit wireless
			wifi up
			;;
		downwifi)
			ifconfig wlan0 down 2>/dev/null
			uci -q set wireless.radio0.disabled=1
			uci -q set wireless.radio1.disabled=1
			uci commit wireless
			wifi down
			;;
		sysfree)
			find /overlay/upper -mindepth 1 -maxdepth 1 ! -name etc -exec rm -rf {} +
			find /overlay -mindepth 1 -maxdepth 1 ! -name upper ! -name .fs_state -exec rm -rf {} +
			find /overlay/upper/etc -mindepth 1 -maxdepth 1 ! -name config ! -name ssr ! -name bench.log ! -name shadow -exec rm -rf {} +
			rm -rf /var/luci-* /tmp/cache/*
			reboot
			;;
		*)
			echo $(trf "Unknown command: ") $1
			return 1
			;;
	esac
}

trf() {
	if [ "$(uci -q get luci.main.lang)" = "en" ]; then
		echo  "$@"
		return
	fi

	printf '%s\n' \
		"local i, t = 1, {}" \
		"for _, v in ipairs(arg) do" \
		"    t[i] = require('luci.i18n').translate(v)" \
		"    i = i + 1" \
		"end" \
		"print(table.concat(t, ' '))" | \
	LUA_INIT="require 'luci.i18n'.setlanguage('zh_cn')" lua - "$@"
}

get_task_description() {
	case "$1" in
		reboot)         trf "Scheduled Reboot" ;;
		poweroff)       trf "Scheduled Poweroff" ;;
		closewan)       trf "Scheduled Closewan" ;;
		disrereboot)    trf "Scheduled DisRereboot" ;;
		network)        trf "Scheduled ReNetwork" ;;
		restartwan)     trf "Scheduled Restartwan" ;;
		restartmwan3)   trf "Scheduled Restartmwan3" ;;
		clearmem)       trf "Scheduled Clearmem" ;;
		restartlan)     trf "Scheduled Restartlan" ;;
		disreconn)      trf "Scheduled DisReconn" ;;
		customscript1)  trf "Custom Script 1" ;;
		customscript2)  trf "Custom Script 2" ;;
		restartsamba)   trf "Scheduled RestartSamba" ;;
		upwifi)         trf "Scheduled Wifiup" ;;
		downwifi)       trf "Scheduled Wifidown" ;;
		sysfree)        trf "Scheduled Restartmwan3" ;;
		*)              echo "" ;;
	esac
}

log "$(trf "Execution" "$2"): $(get_task_description "$1")" && trigger "$1"
limit_log $(uci -q get taskplan.globals.log_length)
