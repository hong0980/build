#!/bin/sh /etc/rc.common
# Copyright by sirpdboy

START=99
STOP=10
USE_PROCD=1

RC=/etc/rc.local
CR=/etc/crontabs/root

del_cru() {
    for file in "$CR" "$RC"; do
        grep -q "taskplanhandler" "$file" && sed -i '/taskplanhandler/d' "$file"
    done
}

task_cmd() {
    case "$1" in
        01) echo "reboot" ;;
        02) echo "poweroff" ;;
        03) echo "network" ;;
        04) echo "restartsamba" ;;
        05) echo "restartlan" ;;
        06) echo "restartwan" ;;
        07) echo "closewan" ;;
        08) echo "clearmem" ;;
        09) echo "sysfree" ;;
        10) echo "disreconn" ;;
        11) echo "disrereboot" ;;
        12) echo "restartmwan3" ;;
        13) echo "upwifi" ;;
        14) echo "downwifi" ;;
        15) echo "customscript1" ;;
        16) echo "customscript2" ;;
    esac
}

run_stime() {
    config_get_bool enable "$1" enable "0"
    [ "$enable" -eq 0 ] && return
    config_get day "$1" day "*"
    config_get week "$1" week "*"
    config_get hour "$1" hour "*"
    config_get month "$1" month "*"
    config_get minute "$1" minute "0"
    config_get stype "$1" stype "07"

    local time_part="$minute $hour $day $month $week /usr/bin/taskplanhandler"
    local cmd_part="$(task_cmd "$stype") 'Scheduled task' > /dev/null 2>&1 &"

    [ -s "$CR" ] && sed -i "1i\\$time_part $cmd_part" "$CR" || echo "$time_part $cmd_part" > "$CR"
}

run_ltime() {
    config_get_bool enable "$1" enable "0"
    [ "$enable" -eq 0 ] && return
    config_get stype "$1" stype "#"
    config_get delay "$1" delay "10"

    awk -v task="(sleep $delay && /usr/bin/taskplanhandler $(task_cmd "$stype") 'Startup task') &" '
        $0 ~ /exit 0/ { print task }
        $0 !~ /exit 0/ { print }
        END { print "exit 0" }
    ' "$RC" > "$RC.tmp" && mv "$RC.tmp" "$RC"
}

start_service() {
    del_cru
    config_load taskplan
    config_foreach run_stime stime
    config_foreach run_ltime ltime
    /etc/init.d/cron reload
}

stop_service() {
    del_cru
    /etc/init.d/cron reload
}

service_triggers() {
    procd_add_reload_trigger taskplan
}
