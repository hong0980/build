<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const flag = "<%=self.flag%>";
        const Value = "<%=self.Value%>";

        if (Value) {
            const encryptPassword = async (pwd, flag) => {
                if (!flag) {
                    return CryptoJS.enc.Hex.stringify(CryptoJS.MD5(pwd));
                }

                const salt = new Uint8Array(16);
                crypto.getRandomValues(salt);
                const key = asmCrypto.Pbkdf2HmacSha512(asmCrypto.string_to_bytes(pwd), salt, 100000, 64);
                return `${asmCrypto.bytes_to_base64(salt)}:${asmCrypto.bytes_to_base64(key)}`;
            };

            const loadScripts = async () => {
                const loadScript = (scriptUrl) => {
                    return new Promise((resolve, reject) => {
                        const script = document.createElement('script');
                        script.src = scriptUrl;
                        script.onload = resolve;
                        script.onerror = reject;
                        document.head.appendChild(script);
                    });
                };

                await Promise.all([
                    loadScript('https://cdn.bootcdn.net/ajax/libs/crypto-js/4.1.1/crypto-js.min.js'),
                    loadScript('https://cdn.bootcdn.net/ajax/libs/asmCrypto/2.3.2/asmcrypto.all.es5.min.js')
                ]);
            };

            await loadScripts();
            const password = await encryptPassword(Value, flag);
            const data = new URLSearchParams({ password: `@ByteArray(${password})`, flag });

            await fetch('<%=url("admin/nas/qbittorrent/encryptPassword")%>', {
                method: 'POST',
                body: data,
            });
        }
    });
</script>

<%+cbi/valueheader%>
<div<%=attr("data-ui-widget", luci.util.serialize_json({
    "Textfield", self:cfgvalue(section) or self.default, {
        id = cbid,
        name = cbid,
        size = self.size,
        datatype = self.datatype,
        optional = self.optional or self.rmempty,
        password = self.password,
        readonly = self.readonly,
        maxlength = self.maxlength,
        placeholder = self.placeholder
    }
}))%>></div>
<%+cbi/valuefooter%>
