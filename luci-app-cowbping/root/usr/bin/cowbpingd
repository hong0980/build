#!/bin/sh
#Copyright (C) 20190805 wulishui <wulishui@gmail.com>
#20190805-202105025

log() {
	echo -e "[ $(date "+%m月%d日 %H:%M:%S" ) ]: $@" >> $text_log
}

text_log_size() {
	if [ -f $text_log ]; then
		filesize=`ls -l $text_log | awk '{print $5}'`
		maxsize=$((1024*512))
		if [ "$filesize" -gt "$maxsize" ]; then
			:> $text_log
		fi
	fi
}

P_G() {
	fail=
	ping1=$(ping -c "$sum" "$address1") || { weberror1=1; log "ping $address1 出错"; }
	ping2=$(ping -c "$sum" "$address2") || { weberror2=1; log "ping $address2 出错"; }
	if [[ "$weberror1" == 1 && "$weberror2" == 1 ]]; then
		fail=1
		st="网络不通 ！！！"
	else
		loss1=`echo $ping1 | sed -rne 's|^[^/]+received, ([^ ]+)% .+$$|\1|p'`
		[ -z "$loss1" ] && loss1=100
		loss2=`echo $ping2 | sed -rne 's|^[^/]+received, ([^ ]+)% .+$$|\1|p'`
		[ -z "$loss2" ] && loss2=100
		[[ "$loss1" -ge "$pkglost" && "$loss2" -ge "$pkglost" ]] && { fail=1; st="丢包率过高：$(((loss1+loss2)/2))%"; }
		delay1=`echo $ping1 | awk -F/ '/round-trip/{print $4}' | cut -d'.' -f1`
		[ -z "$delay1" ] && delay1=10000
		delay2=`echo $ping2 | awk -F/ '/round-trip/{print $4}' | cut -d'.' -f1`
		[ -z "$delay2" ] && delay2=10000
		[[ "$delay1" -ge "$pkgdelay" && "$delay2" -ge "$pkgdelay" ]] && { fail=1; st="延迟过高：$(((delay1+delay2)/2))ms"; }
	fi
	unset ping1 ping2 weberror1 weberror2 delay1 delay2 loss1 loss2
	[[ "$fail" == 1 ]] && {
		text_log_size
		case "$work_mode" in
		1)
			ifup wan
			f="重新拨号"
			;;
		2)
			wifi down
			wifi up
			f="重启WIFI"
			;;
		3)
			/etc/init.d/network restart
			f="重启网络"
			;;
		4)
			kill -9 $(ps | grep 'cbp_cmd' | grep -v 'grep' | awk '{print $1}') >/dev/null 2>&1
			[ -s /etc/config/cbp_cmd ] && sh /etc/config/cbp_cmd 2>/dev/null &
			f="自定义命令< `cat /etc/config/cbp_cmd` >"
			;;
		5)
			wifi down
			wifi up
			f="自动中继"
			;;
		6)
			reboot
			f="重启系统"
			;;
		7)
			poweroff
			f="关机"
			;;
		esac
		log "检查到$st 执行 [ ${f} ]"
	}
}

text_log="/tmp/log/cowbping.log"
sum=$(uci get cowbping.cowbping.sum 2>/dev/null) || sum=5
time=$(uci get cowbping.cowbping.time 2>/dev/null) || time=5
pkglost=$(uci get cowbping.cowbping.pkglost 2>/dev/null) || pkglost=80
pkgdelay=$(uci get cowbping.cowbping.pkgdelay 2>/dev/null) || pkgdelay=300
work_mode=$(uci get cowbping.cowbping.work_mode 2>/dev/null) || work_mode=4
address1=$(uci get cowbping.cowbping.address1 2>/dev/null) || address1="8.8.4.4"
address2=$(uci get cowbping.cowbping.address2 2>/dev/null) || address2="baidu.com"
log "开始运行！系统以每 $time分循环检查网络状况......"

while :; do
	P_G
	sleep ${time}m
done
