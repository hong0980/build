#!/bin/bash

# Copyright (C) 2006 OpenWrt.org
# Copyright 2022-2023 sirpdboy <herboy2008@gmail.com>

. /lib/functions.sh
IDLIST="/var/eqosplus.idlist"

log_msg() {
    logger -p daemon.info -t "eqosplus" "$*"
}

to_minutes() {
    local t="$1"
    [[ "$t" =~ ^([0-9]{1,2}):([0-9]{2})$ ]] || return 1
    local mins=$((10#${BASH_REMATCH[2]}))
    local hours=$((10#${BASH_REMATCH[1]}))
    (( hours >= 0 && hours < 24 && mins >= 0 && mins < 60 )) || return 1
    echo $((hours * 60 + mins))
}

is_active_now() {
    local wd=$(date +%u) now=$(to_minutes "$(date +%H:%M)")
    local sm=$(to_minutes "$timestart") em=$(to_minutes "$timeend")

    local time_ok=$(( (sm == 0 && em == 0) ||
                     (sm < em && now >= sm && now <= em) ||
                     (sm >= em && (now >= sm || now <= em)) ))

    local week_ok=0
    [[ ",${wweek}," =~ ",0," ]] && week_ok=1 ||
    [[ ",${wweek}," =~ ",${wd}," ]] && week_ok=1

    (( time_ok && week_ok )) && return 0 || return 1
}

handle_device() {
    [ -f "$IDLIST" ] || touch "$IDLIST"
    local section="$1"
    local enable wweek timestart timeend
    config_get_bool enable "$section" enable "0"

    [ "$enable" = '0' ] && return

    config_get wweek "$section" week ""
    config_get timeend "$section" timeend ""
    config_get timestart "$section" timestart ""

    if is_active_now; then
        /usr/bin/eqosplus add "$section"
        grep -qxF "$section" "$IDLIST" || echo "$section" >> "$IDLIST"
    else
        /usr/bin/eqosplus del "$section"
        sed -i "/^${section}$/d" "$IDLIST"
    fi
}

time=$(uci_get eqosplus config time 2)
while :; do
    config_load eqosplus
    config_foreach handle_device device
    sleep ${time}m
done
