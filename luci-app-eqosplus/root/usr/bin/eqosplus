#!/bin/bash

# Copyright (C) 2006 OpenWrt.org
# Copyright 2022-2023 sirpdboy <herboy2008@gmail.com>
. /lib/functions.sh

DEBUG=0
crrun="$1"
crid="$2"
IDLIST="/var/eqosplus.idlist"
FLOWID="/var/eqosplus.flowid"

config_load eqosplus
config_get dev config ifname ""

if [ -z "$dev" ]; then
    ifname_field="ifname"
    uci -q get network.wan.ifname >/dev/null || ifname_field="device"

    dev=$(uci -q get "network.wan.$ifname_field")
    [ -z "${dev}" ] && dev=$(ip -o route get 8.8.8.8 | awk '{print $5}')
    : "${dev:=br-lan}"

    if ! [ -e "/sys/class/net/${dev}" ]; then
        dev="br-lan"
    fi
fi

ifbdev="${dev}_ifb"
config_get mac "$crid" mac ""
config_get upload "$crid" upload ""
config_get download "$crid" download ""
config_get_bool enable "$crid" enable "0"

bin_tc=$(which tc)
bin_ip=$(which ip)
bin_iptables=$(which iptables)
bin_ip6tables=$(which ip6tables)

tc="dbg_tc"
ip="dbg_ip"
ipt=$iptables
ipt6=$ip6tables
iptables="dbg_iptables"
ip6tables="dbg_ip6tables"

log_msg() {
    logger -p daemon.info -t "eqosplusctrl" "$*"
}

dbg_iptables() {
    [ "${DEBUG:-0}" -eq 0 ] || echo "DEBUG: iptables $*"
    $bin_iptables "$*"
}

dbg_ip6tables() {
    [ "${DEBUG:-0}" -eq 0 ] || echo "DEBUG: ip6tables $*"
    $bin_ip6tables "$*"
}

dbg_tc() {
    [ "${DEBUG:-0}" -eq 0 ] || echo "DEBUG: tc $*"
    $bin_tc $*
}

dbg_ip() {
    [ "${DEBUG:-0}" -eq 0 ] || echo "DEBUG: ip $*"
    $bin_ip $*
}

ipt() {
    $iptables $*
    $ip6tables $*
}

iptm() {
    $iptables "-t mangle $*"
    $ip6tables "-t mangle $*"
}

stop_qos() {
    for face in $($tc qdisc show | grep htb | awk '{print $5}'); do
        $tc qdisc del dev $face root
    done

    $tc qdisc del dev ${dev} root 2>/dev/null
    $tc qdisc del dev ${ifbdev} root 2>/dev/null
    $tc qdisc del dev ${dev} ingress 2>/dev/null
    $ip link del dev ${ifbdev} 2>/dev/null
}

init_qosplus() {
    lanipaddr=$(uci -q get network.lan.ipaddr 2>/dev/null | awk -F '.' '{print $1"."$2"."$3".0/24"}')

    grep -q '^ifb' /proc/modules || insmod ifb 2>/dev/null
    grep -q '^sch_htb' /proc/modules || insmod sch_htb 2>/dev/null

    $bin_ip link show ${ifbdev} >/dev/null 2>&1 || $bin_ip link add dev ${ifbdev} type ifb
    $bin_ip link set dev ${ifbdev} up

    $bin_tc qdisc del dev ${dev} root 2>/dev/null
    $bin_tc qdisc del dev ${dev} ingress 2>/dev/null
    $bin_tc qdisc del dev ${ifbdev} root 2>/dev/null

    $bin_tc qdisc add dev ${dev} root handle 1:0 htb default 1
    $bin_tc class add dev ${dev} parent 1:0 classid 1:1 htb rate 80gbit prio 0 quantum 1500

    $bin_tc qdisc add dev ${ifbdev} root handle 1:0 htb default 1
    $bin_tc class add dev ${ifbdev} parent 1:0 classid 1:1 htb rate 80gbit prio 0 quantum 1500

    $bin_tc filter add dev ${dev} parent 1:0 protocol ip prio 1 u32 \
        match ip src "$lanipaddr" match ip dst "$lanipaddr" flowid 1:1

    $bin_tc filter add dev ${ifbdev} parent 1:0 protocol ip prio 1 u32 \
        match ip src "$lanipaddr" match ip dst "$lanipaddr" flowid 1:1

    $bin_tc qdisc add dev ${dev} ingress
    $bin_tc filter add dev ${dev} parent ffff: protocol all prio 2 u32 match u32 0 0 \
        action mirred egress redirect dev ${ifbdev}
}

del_id() {
    local id="${1:3:3}"
    local classid="1:$((10#$id))"

    [ "${DEBUG:-0}" -ge 1 ] &&
        log_msg "正在删除规则 [ID:$1] [ClassID:$classid] [MAC/IP:${mac:-未设置}]"

    $tc qdisc del dev ${dev} parent $classid 2>/dev/null || :
    $tc class del dev ${dev} parent 1:1 classid $classid 2>/dev/null || :
    $tc filter del dev ${dev} pref $id 2>/dev/null || :

    $tc qdisc del dev ${ifbdev} parent $classid 2>/dev/null || :
    $tc class del dev ${ifbdev} parent 1:1 classid $classid 2>/dev/null || :
    $tc filter del dev ${ifbdev} pref $id 2>/dev/null || :

    for pref in 5 6; do
        $tc filter del dev ${dev} pref $pref 2>/dev/null || :
        $tc filter del dev ${ifbdev} pref $pref 2>/dev/null || :
    done
}

add_rule() {
    local id="${1:3:3}"
    local classid="1:$((10#$id))"
    UL=$(awk '{printf "%d", $1*8*1000}' <<< $upload)
    DL=$(awk '{printf "%d", $1*8*1000}' <<< $download)

    if [[ "$mac" == *:* ]]; then
        local match_src="match ether src $mac"
        local match_dst="match ether dst $mac"
    else
        local match_src="match ip src ${mac%/32}/32"
        local match_dst="match ip dst ${mac%/32}/32"
    fi

    [ "$UL" -gt 0 ] && {
        $tc class replace dev ${ifbdev} parent 1:1 classid $classid \
            htb rate "${UL}kbit" ceil "${UL}kbit" prio ${classid#*:}
        $tc filter replace dev ${ifbdev} parent 1:0 protocol ip u32 \
            $match_src flowid $classid 2>/dev/null
    }

    [ "$DL" -gt 0 ] && {
        $tc class replace dev ${dev} parent 1:1 classid $classid \
            htb rate "${DL}kbit" ceil "${DL}kbit" prio ${classid#*:}
        $tc filter replace dev ${dev} parent 1:0 protocol ip u32 \
            $match_dst flowid $classid 2>/dev/null
    }

    local newline="${mac} => $classid UL:${UL}kbit DL:${DL}kbit"
    if ! grep -qxF "$newline" "$FLOWID" && [ -n "$mac" ]; then
        sed -i "/$mac/d" "$FLOWID"
        echo "$newline" >> "$FLOWID"
    fi
}

case "$crrun" in
    "stop") stop_qos ;;
    "del") del_id "$crid" ;;
    "add") add_rule "$crid" ;;
    "start")
        while read -r id; do
            [ -z "$id" ] && continue
            enable=$(uci_get eqosplus $id enable 0)
            init_qosplus
            if [ "$enable" -eq '1' ]; then
                add_rule "$id"
            else
                del_id "$id"
                grep -qxF "$id" "$IDLIST" && sed -i "/$id/d" "$IDLIST"
            fi
        done < "$IDLIST"
    ;;
    "status")
        _print_device_status() {
            local dev=$1 direction=$2
            echo "========================================"
            echo "### $direction 限速状态 (${dev}) ###"
            echo "========================================"

            echo "# 队列调度器 (qdisc):"
            tc -s qdisc show dev ${dev} | sed 's/^/  /'
            echo

            echo "# 流量分类 (class):"
            tc -s class show dev ${dev} | awk '
                /class/ {printf "  %s\n", $0; getline; printf "    %s\n", $0}'
            echo

            echo "# 流量规则 (filter):"
            tc -s filter show dev ${dev} | awk '
                /filter/ {
                    print "  " $0;
                    while (getline && $0 !~ /^$/) {
                        if (/match|flowid/) print "    " $0;
                        else if (/actions/) print "    " $0;
                    }
                }'
            echo
        }

        _print_device_status ${dev} "下载"

        _print_device_status "${ifbdev}" "上传"

        [ -f "$IDLIST" ] && {
            echo "========================================"
            echo "### 当前启用的限速规则 (EQoS+) ###"
            echo "========================================"
            printf "%-6s %-20s %-12s %-12s %-10s\n" "ID" "设备(MAC/IP)" "下载速率" "上传速率" "状态"
            echo "----------------------------------------------------------------"
            while read -r id; do
                [ -z "$id" ] && continue
                enable=$(uci_get eqosplus $id enable '')
                [ "$enable" != "1" ] && continue

                mac=$(uci_get eqosplus $id mac '')
                ul=$(uci_get eqosplus $id upload '')
                dl=$(uci_get eqosplus $id download '')
                status=$([ -n "$dl$ul" ] && echo "活跃" || echo "未配置")

                dl_rate=$([ -n "$dl" ] && echo "${dl}M" || echo "-")
                ul_rate=$([ -n "$ul" ] && echo "${ul}M" || echo "-")

                printf "%-6s %-20s %-12s %-12s %-10s\n" "$id" "$mac" "$dl_rate" "$ul_rate" "$status"
            done < "$IDLIST"
            echo
        }

        [ -f "$FLOWID" ] && {
            echo "========================================"
            echo "### FlowID 映射表 (调试信息) ###"
            echo "========================================"
            cat "$FLOWID" | sed 's/^/  /'
            echo
        }

        echo "========================================"
        echo "### 实时流量统计 ###"
        echo "========================================"
        echo "下载方向:"
        tc -s class show dev ${dev} | grep -A1 "1:1 " | sed 's/^/  /'
        echo
        echo "上传方向:"
        tc -s class show dev ${ifbdev} | grep -A1 "1:1 " | sed 's/^/  /'
        echo
    ;;
esac
