#!/bin/sh /etc/rc.common

START=99

_info() {
    logger -st 'deluge' -p 'daemon.info' "$*"
}

get_config() {
    while [ $# -gt 0 ]; do
        eval "$1"="$(uci -q get deluge.main.$1)"
        shift
    done
}

set_config() {
    file="$1"
    shift
    while [ -n "$1" ]; do
        node="$1"
        [ $node = "pwd_sha1" ] || get_config "$node"
        [ -e "$file" ] || return 1
        conf="$(grep "\"$node\"" "$file" | sed 's/[ ,"]//g' | cut -d':' -f2)"
        value=$(eval echo -E "\$$node")

        if [ "$conf" != "$value" -a -n "$value" ]; then
            if [ -n "$conf" ]; then
                sed -i "/\"$node\"/{s|$conf|$value|}" "$file"
            else
                sed -i "/\"$node\"/{s|\"\"|\"$value\"|}" "$file"
            fi
        fi
        shift
    done
}

make_dir() {
    while [ $# -gt 0 ]; do
        [ -n "$1" -a ! -d "$1" ] && mkdir -m 755 -p "$1"
        shift
    done
}

deluge_boot() {
    get_config "download_location" "enable_logging" "geoip_db_location" "https" \
    "language" "log_dir" "log_level" "password" "port" "profile_dir" "user"

    web="$profile_dir/web.conf"
    core="$profile_dir/core.conf"
    make_dir "$profile_dir" "$download_location"

    if [ x"$enable_logging" = x1 ]; then
        make_dir "$log_dir"
        log_level=${log_level:+"-L $log_level"}
        log_file="-l ${log_dir:-$profile_dir}/deluge.log"
    fi

	[ ! -e "$profile_dir/sha1.py" ] && cat <<-EOF > "$profile_dir/sha1.py"
	#!/usr/bin/env python
	import sys
	import hashlib
	password, pwd_sha1 = sys.argv[1:3]
	hashed_password = hashlib.sha1(pwd_sha1.encode("utf-8") + password.encode("utf-8")).hexdigest()
	print(hashed_password)
	EOF

    if [ -e "$core" ]; then
        set_config "$core" "cache_size" "copy_torrent_file" "download_location" "max_active_downloading" \
        "max_active_limit" "max_active_seeding" "max_connections_global" "max_connections_per_torrent" \
        "max_download_speed" "max_download_speed_per_torrent" "max_upload_slots_global" \
        "max_upload_slots_per_torrent" "max_upload_speed" "max_upload_speed_per_torrent" \
        "move_completed" "move_completed_path" "prioritize_first_last_pieces" "sequential_download" \
        "torrentfiles_location"
        make_dir "$move_completed_path" "$torrentfiles_location"
    else
		cat <<-EOF > "$core"
		{
		    "random_port": false,
		    "queue_new_to_top": true,
		    "new_release_check": false,
		    "listen_random_port": null,
		    "pre_allocate_storage": true,
		    "max_active_limit": -1,
		    "max_active_seeding": -1,
		    "max_upload_slots_global": -1,
		    "download_location": "$download_location"
		}
		EOF
    fi

    [ -e "$web" ] && _pwd_salt=$(grep "pwd_salt" "$web" | sed 's/[ ,"]//g' | cut -d':' -f2)
    dwsalt=${_pwd_salt:-$(tr -dc 'a-e0-9' < /dev/urandom | head -c 40)}
    pwd_sha1="$(python $profile_dir/sha1.py $password $dwsalt)"
    if [ -e "$web" ]; then
        set_config "$web" "geoip_db_location" "https" "language" "port" "pwd_sha1"
    else
		cat <<-EOF > "$web"
		{
		    "https": $https,
		    "pwd_salt": "$dwsalt",
		    "pwd_sha1": "$pwd_sha1",
		    "language": "$language",
		    "show_session_speed": true,
		    "geoip_db_location": "$geoip_db_location/GeoIP.dat"
		}
		EOF
    fi
    port=${port:+"-p $port"}
    user=${user:+"-U $user"}
    profile_dir=${profile_dir:+"-c $profile_dir"}
    python /usr/bin/deluged    $profile_dir $log_file $log_level $user
    python /usr/bin/deluge-web $profile_dir $log_file $log_level $user $port
}

start() {
    [ x$(uci -q get deluge.main.enabled) = x ] && return 1
    deluge_boot
    sleep 3
    ps | grep deluge | awk '/usr/{print $1}' >/dev/null 2>&1 && _info 'Start deluge service'
    ps | grep deluge | awk '/web/{print $1}' >/dev/null 2>&1 && _info 'Start deluge-web service'
}

stop() {
    kill "$(ps | grep deluge | awk '/usr/{print $1}')" >/dev/null 2>&1
    kill "$(ps | grep deluge | awk '/web/{print $1}')" >/dev/null 2>&1
    _info 'Stop deluge service'
}
