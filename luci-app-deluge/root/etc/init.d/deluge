#!/bin/sh /etc/rc.common

START=99

get_config() {
	while [ $# != 0 ]; do
		eval ${1}=`uci get deluge.main.${1}` 2>/dev/null
		shift
	done
}

deluge_config() {
	local xx=$1
	shift
	while [ $# != 0 ]; do
		eval _${1}=$(grep "\"$1\"" "$xx" | sed 's/ //g; s/"//g; s/,/:/g;' | cut -d':' -f2) || echo ""
		shift
	done
}

make_dir() {
	while [ $# != 0 ]; do
		[ -d "$1" ] || mkdir -m 755 -p "$1" 2>/dev/null
		shift
	done
}

deluge_boot() {
	local profile_dir_web="$profile_dir/web.conf"
	local profile_dir_core="$profile_dir/core.conf"
	[ -f $profile_dir_web ] && \
	deluge_config "$profile_dir_web" "port" "https" "pwd_salt" "pwd_sha1" "language"
	make_dir "$profile_dir" "$download_location"

	if [ x$enable_logging = x1 ]; then
		[ -n "$log_dir" ] && {
			make_dir "$log_dir"
			log_file="-l $log_dir/deluge.log"
		} || {
			log_file="-l $profile_dir/deluge.log"
		}
		[ -n "$log_level" ] && log_level="-L $log_level"
	else
		log_file=""
		log_level=""
	fi

	if [ -f $profile_dir_core ]; then
		deluge_config "$profile_dir_core" "cache_size" "download_location" "move_completed_path" "torrentfiles_location"
		[ "$cache_size" = "$_cache_size" ] || \
		sed -i "/cache_size/ {s|:.*,|: $cache_size,|}" $profile_dir_core

		[ "$download_location" = "$_download_location" ] || \
		sed -i "/download_location/ {s|: \".*\"|: \"$download_location\"|}" $profile_dir_core

		[ x$move_completed_enabled != x1 ] && \
		sed -i "/move_completed\"/ {s|:.*,|: false,|}" $profile_dir_core || \
		{
			sed -i "/move_completed\"/ {s|:.*,|: true,|}" $profile_dir_core
			make_dir "$move_completed_path"
			[ "$move_completed_path" = "$_move_completed_path" ] || \
			sed -i "/move_completed_path/ {s|: \".*\"|: \"$move_completed_path\"|}" $profile_dir_core
		}

		[ x$copy_torrent_file_enabled != x1 ] && \
		sed -i "/copy_torrent_file/ {s|:.*,|: false,|}" $profile_dir_core || \
		{
			sed -i "/copy_torrent_file/ {s|:.*,|: true,|}" $profile_dir_core
			make_dir "$torrentfiles_location"
			[ "$torrentfiles_location" = "$_torrentfiles_location" ] || \
			sed -i "/torrentfiles_location/ {s|: \".*\"|: \"$torrentfiles_location\"|}" $profile_dir_core
		}
	else
		cat <<-EOF > $profile_dir_core
		{
			"random_port": false,
			"queue_new_to_top": true,
			"new_release_check": false,
			"listen_random_port": null,
			"pre_allocate_storage": true,
			"download_location": "$download_location",
			"move_completed_path": "$move_completed_path",
			"torrentfiles_location": "$torrentfiles_location"
		}
		EOF
	fi

	if [ ! -e "$profile_dir/sha1.py" ]; then
		cat <<-EOF > "$profile_dir/sha1.py"
			#!/usr/bin/env python
			import sys
			import hashlib
			password = sys.argv[1]
			pwd_sha1 = sys.argv[2]
			s = hashlib.sha1()
			s.update(pwd_sha1.encode('utf-8'))
			s.update(password.encode('utf-8'))
			print (s.hexdigest())
		EOF
	fi
	[ -n "$_pwd_salt" ] && dwsalt=$_pwd_salt || \
	dwsalt="$(head /dev/urandom | tr -dc 'a-e0-9' 2>&1 | head -c 40; echo)"
	dwsha1="$(/usr/bin/python3 $profile_dir/sha1.py $password $dwsalt)"
	if [ -f $profile_dir_web ]; then
		[ "$port"     =     "$_port" ] || sed -i '/port/ {s|:.*,|: '"$port"',|}' $profile_dir_web
		[ "$https"    =    "$_https" ] || sed -i '/https/ {s|:.*,|: '"$https"',|}' $profile_dir_web
		[ "$dwsha1"   =   "$_dwsha1" ] || sed -i '/pwd_sha1/ {s|: ".*"|: "'"$dwsha1"'"|}' $profile_dir_web
		[ "$language" = "$_language" ] || sed -i '/language/ {s|: ".*"|: "'"$language"'"|}' $profile_dir_web
	else
		cat <<-EOF > $profile_dir_web
		{
			"port": $port,
			"https": $https,
			"language": "$language",
			"show_session_speed": true,
			"geoip_db_location": "$geoip_db_location/GeoIP.dat",
			"pwd_salt": "$dwsalt",
			"pwd_sha1": "$dwsha1"
		}
		EOF
	fi
	if [ ! -f "$profile_dir/.configured" ]; then
		logger -t "deluge" -p "Setting default deluge ui to console ... "
		/usr/bin/deluge -s console
		touch "$profile_dir/.configured"
	fi
	port="-p $port"; user="-U $user"; profile_dir="-c $profile_dir"
	/usr/bin/python3 /usr/bin/deluged    $profile_dir $log_file $log_level $user
	/usr/bin/python3 /usr/bin/deluge-web $profile_dir $log_file $log_level $user $port
}

start() {
	get_config `awk '/option/{print $2}' /etc/config/deluge`
	if [ x$enabled = x1 ]; then
		if [ -d "$profile_dir" ]; then
			deluge_boot
		else
			deluge_boot
			sleep 3
			restart
		fi
	else
		return 1
	fi
	sleep 3
	ps | grep deluge | awk '/usr/{print $1}' >/dev/null 2>&1 && logger -t 'deluge' -p 'daemon.info' 'Start deluge service'
	ps | grep deluge | awk '/web/{print $1}' >/dev/null 2>&1 && logger -t 'deluge' -p 'daemon.info' 'Start deluge-web service'
}

stop() {
	kill "$(ps | grep deluge | awk '/usr/{print $1}')" >/dev/null 2>&1
	kill "$(ps | grep deluge | awk '/web/{print $1}')" >/dev/null 2>&1
	logger -t 'deluge' -p 'daemon.info' 'Stop deluge service'
}
