#!/bin/sh /etc/rc.common

START=99

get_set_conf() {
	/usr/bin/python3 $profile_dir/set_get.py $1 $2 $3
}

get_config() {
	while [ $# != 0 ]; do
		eval ${1}=`uci get deluge.main.${1}` 2>/dev/null
		shift
	done
}

# get_deluge_conf() {
# 	local xx=$1
# 	shift
# 	while [ $# != 0 ]; do
# 		eval _${1}=$(grep "\"$1\"" "$xx" | sed 's/ //g; s/"//g; s/,/:/g;' | cut -d':' -f2) || echo ""
# 		shift
# 	done
# }

set_conf() {
	# $1文件，$2节点，$3值
	local file=$1
	local node=$2
	local value=$3
	local deluge_conf=$(grep "\"$node\"" "$file" | sed 's/ //g; s/"//g; s/,/:/g;' | cut -d':' -f2)
	if [ "$value" != "$deluge_conf" ]; then
		if [ "$(grep "\"$node\"" $file | grep -o '"' | wc -l)" = 2 ]; then
			sed -i "/\"$node\"/ {s|: .*,|: $value,|}" $file
		else
			sed -i "/\"$node\"/ {s|: \".*\"|: \"$value\"|}" $file
		fi
	fi
}

make_dir() {
	while [ $# != 0 ]; do
		[ -d "$1" ] || mkdir -m 755 -p "$1" 2>/dev/null
		shift
	done
}

deluge_boot() {
	web_conf="$profile_dir/web.conf"
	core_conf="$profile_dir/core.conf"
	make_dir "$profile_dir" "$download_location"

	if [ x$enable_logging = x1 ]; then
		[ -n "$log_dir" ] && {
			make_dir "$log_dir"
			log_file="-l $log_dir/deluge.log"
		} || {
			log_file="-l $profile_dir/deluge.log"
		}
		[ -n "$log_level" ] && log_level="-L $log_level"
	else
		log_file=""
		log_level=""
	fi

	if [ -e "$core_conf" ]; then
		set_conf $core_conf cache_size $cache_size
		set_conf $core_conf download_location $download_location

		if [ x$move_completed_enabled = x1 ]; then
			make_dir "$move_completed_path"
			set_conf $core_conf move_completed 'true'
			set_conf $core_conf move_completed_path $move_completed_path
		else
			set_conf $core_conf move_completed 'false'
		fi

		if [ x$copy_torrent_file_enabled = x1 ]; then
			make_dir "$torrentfiles_location"
			set_conf $core_conf copy_torrent_file 'true'
			set_conf $core_conf torrentfiles_location $torrentfiles_location
		else
			set_conf $core_conf copy_torrent_file 'false'
		fi
	else
		cat <<-EOF > $core_conf
		{
			"random_port": false,
			"queue_new_to_top": true,
			"new_release_check": false,
			"listen_random_port": null,
			"pre_allocate_storage": true,
			"download_location": "$download_location",
			"move_completed_path": "$move_completed_path",
			"torrentfiles_location": "$torrentfiles_location"
		}
		EOF
	fi

	if [ ! -e "$profile_dir/set_get.py" ]; then
		cat <<-EOF > $profile_dir/set_get.py
		#!/usr/bin/env python
		from deluge.config import Config
		import os
		import sys
		import hashlib
		def write_config(value):
		    config[key] = value
		    try:
		        config.save()
		    except IOError as e:
		        sys.exit(1)
		def web_password(value):
		    pwd_salt = config['pwd_salt']
		    s = hashlib.sha1()
		    s.update(pwd_salt.encode('utf-8'))
		    s.update(value.encode('utf-8'))
		    write_config(s.hexdigest())
		if __name__ == '__main__':
		    if not (3 <= len(sys.argv) <= 4):
		        sys.exit(1)
		    config_file, key = sys.argv[1:3]
		    config = Config(config_file + '.conf', config_dir=os.path.dirname(__file__))
		    if len(sys.argv) == 3:
		    	print(config[key])
		    else:
		        value = sys.argv[3]
		        if key == 'pwd_sha1':
		            web_password(value)
		        else:
		            write_config(value)
		EOF
	fi
	if [ -e "$web_conf" ]; then
		set_conf $web_conf port		$port
		set_conf $web_conf https	$https
		/usr/bin/python3 $profile_dir/set_get.py web pwd_sha1 $password
		set_conf $web_conf language	$language
	else
		cat <<-EOF > $web_conf
		{
			"port": $port,
			"https": $https,
			"language": "$language",
			"show_session_speed": true,
			"geoip_db_location": "$geoip_db_location/GeoIP.dat",
			"pwd_salt": "$(head /dev/urandom | tr -dc 'a-e0-9' 2>&1 | head -c 40; echo)",
			"pwd_sha1": "$pwd_sha1"
		}
		EOF
	fi
	if [ ! -f "$profile_dir/.configured" ]; then
		logger -t "deluge" -p "Setting default deluge ui to console ... "
		/usr/bin/deluge -s console
		touch "$profile_dir/.configured"
	fi
	port="-p $port"; user="-U $user"; profile_dir="-c $profile_dir"
	/usr/bin/python3 /usr/bin/deluged    $profile_dir $log_file $log_level $user
	/usr/bin/python3 /usr/bin/deluge-web $profile_dir $log_file $log_level $user $port
}

start() {
	get_config `awk '/option/{print $2}' /etc/config/deluge`
	if [ x$enabled = x1 ]; then
		if [ -d "$profile_dir" ]; then
			deluge_boot
		else
			deluge_boot
			sleep 5
			restart
		fi
	else
		return 1
	fi
	sleep 3
	ps | grep deluge | awk '/usr/{print $1}' >/dev/null 2>&1 && logger -t 'deluge' -p 'daemon.info' 'Start deluge service'
	ps | grep deluge | awk '/web/{print $1}' >/dev/null 2>&1 && logger -t 'deluge' -p 'daemon.info' 'Start deluge-web service'
}

stop() {
	kill "$(ps | grep deluge | awk '/usr/{print $1}')" >/dev/null 2>&1
	kill "$(ps | grep deluge | awk '/web/{print $1}')" >/dev/null 2>&1
	logger -t 'deluge' -p 'daemon.info' 'Stop deluge service'
}
