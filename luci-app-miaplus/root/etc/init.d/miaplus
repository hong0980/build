#!/bin/sh /etc/rc.common

START=30
USE_PROCD=1
ipv6enable=$(uci -q get miaplus.config.ipv6enable || echo 0)
cmd="iptables"
[ "$ipv6enable" = "1" ] && cmd="ip6tables"

log_msg() {
	logger -p daemon.info -t "miaplus" -- "$*"
	echo "$*"
}

add_rule() {
	config_get_bool client "$1" enable '0'
	config_get_bool enable 'config' enable '0'
	config_get_bool strict 'config' strict '0'
	[ "$client" -eq "0" -o "$enable" -eq '0' ] && return

	$cmd -t filter -N MIAPLUS 2>/dev/null
	$cmd -C INPUT -p udp --dport 53 -j MIAPLUS >/dev/null 2>&1 || \
		$cmd -I INPUT -p udp --dport 53 -m comment --comment "miaplus_control" -j MIAPLUS
	$cmd -C INPUT -p tcp --dport 53 -j MIAPLUS >/dev/null 2>&1 || \
		$cmd -I INPUT -p tcp --dport 53 -m comment --comment "miaplus_control" -j MIAPLUS

	[ "$strict" -eq '1' ] && {
		$cmd -C FORWARD -j MIAPLUS >/dev/null 2>&1 || \
			$cmd -t filter -I FORWARD -m comment --comment "miaplus_control_forward" -j MIAPLUS
	}

	$cmd -t nat -C PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53 >/dev/null 2>&1 || \
		$cmd -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53 -m comment --comment "miaplus_control"
	$cmd -t nat -C PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53 >/dev/null 2>&1 || \
		$cmd -t nat -A PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53 -m comment --comment "miaplus_control"

	add_rule_for_protocol() {
		local type=$1 identifier=$2
		case "$type" in
			ip|ip6) match="-s $identifier" ;;
			mac)    match="-m mac --mac-source $identifier" ;;
		esac

		$cmd -C INPUT $match -j DROP >/dev/null 2>&1 || \
			$cmd -I INPUT $match -j DROP -m comment --comment "miaplus_block_$identifier"

		local time_match="" nt_time="" ft_time=""
		[ -n "$weekdays" ] && time_match="$time_match --weekdays ${weekdays// /,}"
		[ -n "$monthdays" ] && time_match="$time_match --monthdays $monthdays"

		if [ -n "$start_time" -a -n "$stop_time" ]; then
			if [ -n "$start_date" -a -n "$stop_date" -a "$combine_datetime" = "1" ]; then
				nt_time="T${start_time}"
				ft_time="T${stop_time}"
			else
				time_match="$time_match --timestart ${start_time} --timestop ${stop_time}"
			fi
		fi

		if [ -n "$start_date" -a -n "$stop_date" ]; then
			time_match="$time_match --datestart ${start_date}${nt_time} --datestop ${stop_date}${ft_time}"
		fi

		$cmd -t filter -A MIAPLUS $match \
			-m time --kerneltz $time_match \
			-j DROP \
			-m comment --comment "miaplus_time_$identifier_$(date +%s)"

		$cmd -t filter -A MIAPLUS $match \
			-j ACCEPT \
			-m comment --comment "miaplus_allow_$identifier"
	}

	config_get ip "$1" ipaddr ''
	config_get mac "$1" macaddr ''
	config_get ipv6 "$1" ip6addr ''
	config_get monthdays "$1" monthdays ''
	config_get start_date "$1" start_date ''
	config_get stop_date "$1" stop_date ''
	config_get start_time "$1" start_time ''
	config_get stop_time "$1" stop_time ''
	config_get weekdays "$1" weekdays ''
	config_get_bool combine_datetime "$1" combine_datetime '0'

	if [ -n "$mac" ]; then
		add_rule_for_protocol "mac" "$mac"
	elif [ -n "$ip" ]; then
		add_rule_for_protocol "ip" "$ip"
	elif [ -n "$ip6" -a "$ipv6enable" = "1" ]; then
		add_rule_for_protocol "ip6" "$ip6"
	fi
}

start_service() {
	stop_service
	$cmd -t filter -N MIAPLUS 2>/dev/null
	$cmd -t filter -F MIAPLUS 2>/dev/null
	config_load miaplus
	config_foreach add_rule macbind
}

stop_service() {
	for chain in INPUT FORWARD; do
		$cmd -L $chain -n --line-numbers 2>/dev/null | \
			awk '/miaplus_/ {print $1}' | sort -rn | \
			while read num; do $cmd -D $chain $num 2>/dev/null; done
	done

	$cmd -t nat -L PREROUTING -n --line-numbers 2>/dev/null | \
		awk '/miaplus_control/ {print $1}' | sort -rn | \
		while read num; do $cmd -t nat -D PREROUTING $num 2>/dev/null; done

	$cmd -t filter -F MIAPLUS 2>/dev/null
	$cmd -t filter -X MIAPLUS 2>/dev/null
}

service_triggers() {
	procd_add_reload_trigger miaplus
}
