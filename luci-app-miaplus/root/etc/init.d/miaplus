#!/bin/sh /etc/rc.common

START=30
USE_PROCD=1
ipv6enable=$(uci -q get miaplus.config.ipv6enable || echo 0)
cmd="iptables"
[ "$ipv6enable" = "1" ] && {
	cmd="ip6tables"
	tc="tc -6"
}

log_msg() {
	logger -p daemon.info -t "miaplus" -- "$*"
	echo "$*"
}

add_rule() {
	local var="$1"
	config_get_bool client "$var" enable '0'
	config_get_bool enable 'config' enable '0'
	config_get_bool strict 'config' strict '0'
	[ "$client" -eq "0" -o "$enable" -eq '0' ] && return

	$cmd -t filter -N MIAPLUS 2>/dev/null
	for proto in tcp udp; do
		$cmd -C INPUT -p $proto --dport 53 -j MIAPLUS >/dev/null 2>&1 || \
			$cmd -I INPUT -p $proto --dport 53 -m comment --comment "miaplus_control" -j MIAPLUS
		$cmd -t nat -C PREROUTING -p $proto --dport 53 -j REDIRECT --to-ports 53 >/dev/null 2>&1 || \
			$cmd -t nat -A PREROUTING -p $proto --dport 53 -j REDIRECT --to-ports 53 -m comment --comment "miaplus_control"
	done

	[ "$strict" -eq '1' ] && {
		$cmd -C FORWARD -j MIAPLUS >/dev/null 2>&1 || \
			$cmd -t filter -I FORWARD -m comment --comment "miaplus_control_forward" -j MIAPLUS
	}

	config_get iface 'config' interface "eth0"         # 出口接口（LAN 或 WAN）
	config_get wan_if 'config' wan_interface "pppoe-wan"  # 可选：上行限速接口

	config_get rate "$var" rate ""
	config_get limit "$var" limit ""
	config_get limit_burst "$var" limit_burst "5"

	# 初始化 TC 根队列（仅执行一次）
	for dev in $iface $wan_if; do
		if [ -n "$rate" ] && ! tc qdisc show dev $dev | grep -q htb; then
			tc qdisc add dev $dev root handle 1: htb default 10
			tc class add dev $dev parent 1: classid 1:1 htb rate 100mbit ceil 100mbit
			tc class add dev $dev parent 1:1 classid 1:10 htb rate 100mbit ceil 100mbit
			tc qdisc add dev $dev parent 1:10 handle 10: sfq perturb 10
		fi
	done

	add_rule_core() {
		local type=$1 identifier=$2 match="" time_args=""
		case "$type" in
			ip|ip6) match="-s $identifier" ;;
			mac)    match="-m mac --mac-source $identifier" ;;
		esac

		local handle_id=$(printf "%04x" $((0x$(echo -n "$identifier" | md5sum | cut -c1-4))))

		if [ -n "$rate" ] && echo "$rate" | grep -q '^[0-9]\+\(\.[0-9]\+\)\?$'; then
			rate="${rate}mbit"
			tc class add dev $iface parent 1:1 classid 1:$handle_id htb rate $rate ceil $rate prio 2
			tc qdisc add dev $iface parent 1:$handle_id handle ${handle_id}: sfq perturb 10
			tc filter add dev $iface parent 1: protocol ip prio 1 handle $handle_id fw flowid 1:$handle_id

			if [ -n "$wan_if" ]; then
				tc class add dev $wan_if parent 1:1 classid 1:$handle_id htb rate $rate ceil $rate prio 2
				tc qdisc add dev $wan_if parent 1:$handle_id handle ${handle_id}: sfq perturb 10
				tc filter add dev $wan_if parent 1: protocol ip prio 1 handle $handle_id fw flowid 1:$handle_id
			fi

			$cmd -t mangle -A PREROUTING $match -j MARK --set-mark $((0x$handle_id)) \
				-m comment --comment "miaplus_mark_${identifier}_down"
			$cmd -t mangle -A POSTROUTING $match -j MARK --set-mark $((0x$handle_id)) \
				-m comment --comment "miaplus_mark_${identifier}_up"
		fi

		[ -n "$wds" ] && time_args="$time_args --weekdays ${wds// /,}"
		[ -n "$day" ] && time_args="$time_args --monthdays ${day// /,}"

		if [ "$tm" -eq 1 -a -n "$on_t" -a -n "$off_t" -a -n "$on_d" -a -n "$off_d" ]; then
			time_args="$time_args --datestart ${on_d}T${on_t} --datestop ${off_d}T${off_t}"
		else
			[ -n "$on_d" -a -n "$off_d" ] && time_args="$time_args --datestart $on_d --datestop $off_d"
			[ -n "$on_t" -a -n "$off_t" ] && time_args="$time_args --timestart $on_t --timestop $off_t"
		fi

		$cmd -t filter -A MIAPLUS $match \
			-m time --kerneltz $time_args \
			-j DROP \
			-m comment --comment "miaplus_time_$identifier"

		$cmd -C INPUT $match -j DROP >/dev/null 2>&1 || \
			$cmd -I INPUT $match -j DROP -m comment --comment "miaplus_block_$identifier"

		if [ -n "$limit" ]; then
			$cmd -A MIAPLUS $match \
				-m limit --limit "$limit" --limit-burst "${limit_burst:-5}" \
				-j ACCEPT \
				-m comment --comment "miaplus_limit_$identifier"
		else
			$cmd -A MIAPLUS $match \
				-j ACCEPT \
				-m comment --comment "miaplus_allow_$identifier"
		fi
	}

	config_get ip "$var" ipaddr ''
	config_get mac "$var" macaddr ''
	config_get ip6 "$var" ip6addr ''
	config_get wds "$var" weekdays ''
	config_get day "$var" monthdays ''
	config_get on_d "$var" start_date ''
	config_get off_d "$var" stop_date ''
	config_get on_t "$var" start_time ''
	config_get off_t "$var" stop_time ''
	config_get_bool tm "$var" time_mode '0'

	if [ -n "$mac" ]; then
		add_rule_core "mac" "$mac"
	elif [ -n "$ip" ]; then
		add_rule_core "ip" "$ip"
	elif [ -n "$ip6" -a "$ipv6enable" = "1" ]; then
		add_rule_core "ip6" "$ip6"
	fi
}

start_service() {
	stop_service
	$cmd -t filter -N MIAPLUS 2>/dev/null
	$cmd -t filter -F MIAPLUS 2>/dev/null
	config_load miaplus
	config_foreach add_rule bind
}

stop_service() {
	for chain in INPUT FORWARD; do
		$cmd -L $chain -n --line-numbers 2>/dev/null | \
			awk '/miaplus_/ {print $1}' | sort -rn | \
			while read num; do $cmd -D $chain $num 2>/dev/null; done
	done

	$cmd -t nat -L PREROUTING -n --line-numbers 2>/dev/null | \
		awk '/miaplus_control/ {print $1}' | sort -rn | \
		while read num; do $cmd -t nat -D PREROUTING $num 2>/dev/null; done

	$cmd -t filter -F MIAPLUS 2>/dev/null
	$cmd -t filter -X MIAPLUS 2>/dev/null

	for chain in PREROUTING POSTROUTING; do
		$cmd -t mangle -L $chain -n --line-numbers 2>/dev/null | \
			awk '/miaplus_/ {print $1}' | sort -rn | \
			while read num; do $cmd -t mangle -D $chain $num 2>/dev/null; done
	done

	iface=$(uci -q get miaplus.config.interface || echo "eth0")
	wan_if=$(uci -q get miaplus.config.wan_interface || echo "pppoe-wan")

	tc qdisc del dev "$iface" root 2>/dev/null
	[ -n "$wan_if" ] && tc qdisc del dev "$wan_if" root 2>/dev/null
}

service_triggers() {
	procd_add_reload_trigger miaplus
}
